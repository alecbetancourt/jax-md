
# Autogenerated script for updating torsion parameters in a parmtop file using parmed. Do not modify. 

from os import system
import subprocess

def ParmedPrintDihedralsCLI(torsion_atom_names):
	return 'printDihedrals @%s @%s @%s @%s' % tuple(torsion_atom_names)

def ParmedDeleteDihedralCLI(torsion_atom_names):
	return 'deleteDihedral @%s @%s @%s @%s' % tuple(torsion_atom_names)

def ParmedAddDihedralCLI(torsion_atom_names, k, phase, per, scee, scnb):
	params=[float(k), float(per), float(phase),  float(scee), float(scnb)]
	return 'addDihedral @%s @%s @%s @%s %f %f %f %f %f' % (tuple(torsion_atom_names+params))

def UpdateParmTopCLI(prmtop_file_name, params, debug=True):

	parmed_buffer='parm %s\n' % (prmtop_file_name)

	if(debug):
		parmed_check_buffer='parm %s\n' % (prmtop_file_name)

	for key, value in params.items():
		torsion_atom_names=value['torsion_mask']
		if(debug):
			parmed_buffer+=ParmedPrintDihedralsCLI(torsion_atom_names)+'\n'
			parmed_check_buffer+=ParmedPrintDihedralsCLI(torsion_atom_names)+'\n'
		
		parmed_buffer+=ParmedDeleteDihedralCLI(torsion_atom_names)+'\n'
		parmed_buffer+=ParmedAddDihedralCLI(torsion_atom_names, value['height'], value['phase'], value['periodicity'], value['scee'], value['scnb'])+'\n'

	parmed_buffer+='outparm %s.new\n' % (prmtop_file_name)

	if(debug):
		print(parmed_buffer)

	command=['parmed']
	result = subprocess.run(command, input=parmed_buffer, text=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

	system('mv %s %s.bak' % (prmtop_file_name, prmtop_file_name))
	system('mv %s.new %s' % (prmtop_file_name, prmtop_file_name))

	if(debug):
		result = subprocess.run(command, input=parmed_check_buffer, text=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
		print(result.stdout)

	return
	
